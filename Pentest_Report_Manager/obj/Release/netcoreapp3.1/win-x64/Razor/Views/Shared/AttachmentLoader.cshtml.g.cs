#pragma checksum "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "069c8c3158c75e83e943fc760565a1afb61c3cb6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_AttachmentLoader), @"mvc.1.0.view", @"/Views/Shared/AttachmentLoader.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using Pentest_Report_Manager;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using Pentest_Report_Manager.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using BlogPortal.Core.BussinessTemplatesModel.BlogPost;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using ProjectSupport.Core.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using Pentest_Report_Manager.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using Pentest_Report_Manager.Classes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\_ViewImports.cshtml"
using ProjectSupport.DbUtilities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"069c8c3158c75e83e943fc760565a1afb61c3cb6", @"/Views/Shared/AttachmentLoader.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f36603d3ed9f9e6c5706ec0778aeac1f65beeaa1", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_AttachmentLoader : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<AttachmentUploadObject>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<style>\r\n    .attachment-progress-bg {\r\n        background-color: #c5c3be !important;\r\n    }\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"  w-100 attachmentCard\">\r\n\r\n");
#nullable restore
#line 15 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
       
        string ids = "";
        if (Model.Attachments != null && Model.Attachments.ToList().Count > 0)
        {
            ids = string.Join(",", Model.Attachments.Select(a => a.FilePhysicalName));
        }
    

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    <input id=\"attachmentsIDsList\" name=\"attachmentsIDsList\"");
            BeginWriteAttribute("value", " value=\"", 481, "\"", 493, 1);
#nullable restore
#line 23 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
WriteAttributeValue("", 489, ids, 489, 4, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""d-none"" />

    <div class=""card-body text-left"">
        <h5 class="" mb-0 mr-auto d-inline-block"">Attachments</h5>
        <div class=""btn btn-info btn-sm my-0 ml-4 px-3 d-inline-block"">
            <i class=""fas fa-plus fa-lg""></i>
        </div>
    </div>

    <input id=""tempSelectedFiles"" type=""file"" class=""d-none"" multiple >
    <ul tabindex=""1"" class=""flexdatalist-multiple flex0 mt-n2 border attachmentList"">
        <li class=""chip lighten-4 waiting d-none""");
            BeginWriteAttribute("fileId", " fileId=\"", 981, "\"", 990, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <div class=""spinner-border spinner-border-sm mr-1"" role=""status"">
                <span class=""sr-only"">Loading...</span>
            </div>
            <span class=""text"">aa aaaaa</span>
            <i class=""close fas fa-times fdl-remove""></i>
        </li>
        <li class=""chip lighten-4 inprogress d-none h-p35""");
            BeginWriteAttribute("fileId", " fileId=\"", 1330, "\"", 1339, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <span class=""text"">aa aaaaa</span>
            <i class=""close fas fa-times fdl-remove mb-nn6""></i>
            <div class=""progress md-progress mb-1 attachment-progress-bg h-p4 mt-nn6"">
                <div class=""progress-bar"" role=""progressbar"" style=""width: 0%;"" aria-valuenow=""25"" aria-valuemin=""0"" aria-valuemax=""100""></div>
            </div>
        </li>
        <li class=""chip lighten-4 completed  d-none""");
            BeginWriteAttribute("fileId", " fileId=\"", 1777, "\"", 1786, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <span class=\"text\">aa aaaaa</span>\r\n            <i class=\"close fas fa-times fdl-remove\"></i>\r\n        </li>\r\n        <li class=\"chip lighten-4 failed bg-warning d-none\"");
            BeginWriteAttribute("fileId", " fileId=\"", 1971, "\"", 1980, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <i class=\"fas fa-redo-alt cursor-pointer mr-1\"></i>\r\n            <span class=\"text\">aa aaaaa</span>\r\n            <i class=\"close fas fa-times fdl-remove\"></i>\r\n        </li>\r\n        \r\n");
#nullable restore
#line 58 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
         if (Model.Attachments != null )
        {
            foreach (var attach in Model.Attachments)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <li class=\"chip lighten-4 completed\"");
            BeginWriteAttribute("fileId", " fileId=\"", 2356, "\"", 2389, 1);
#nullable restore
#line 62 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
WriteAttributeValue("", 2365, attach.FilePhysicalName, 2365, 24, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                    <span class=\"text\">");
#nullable restore
#line 63 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                                  Write(attach.FileVirtualName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                    <i class=\"close fas fa-times fdl-remove\"></i>\r\n                </li>\r\n");
#nullable restore
#line 66 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
            }
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </ul>




</div>



<script>

    $(document).ready(function () {
        {


            var attachmentCard = $("".attachmentCard"");
            var attachmentList = attachmentCard.find(""> ul"");
            var attachmentTemplate_Waiting = attachmentList.find(""> li.waiting.d-none"");
            var attachmentTemplate_inprogress = attachmentList.find(""> li.inprogress.d-none"");
            var attachmentTemplate_completed = attachmentList.find(""> li.completed.d-none"");
            var attachmentTemplate_failed = attachmentList.find(""> li.failed.d-none"");
            var tempSelectedFiles = attachmentCard.find(""> #tempSelectedFiles"");
            var attachmentsIDsListInput = attachmentCard.find(""> #attachmentsIDsList"");
            var numFiles = 0;


            attachmentList.find(""> li > i.fdl-remove"").off().click(function () {
                $(this).closest(""li"").remove();
                updateAttachment_FileIdsList_Input();
            });

            attachmentCard.fi");
            WriteLiteral(@"nd("".card-body .btn"").off().click(function () {
                tempSelectedFiles.trigger('click');
            });

            tempSelectedFiles.value = """";
            tempSelectedFiles.change(function (event) {
                for (var i = 0; i < this.files.length; i++) {
                    var file = this.files[i];
                    var newAttachment = attachmentTemplate_Waiting.clone();
                    newAttachment.removeClass(""d-none"");
                    newAttachment.attr('id', new Date().getTime());
                    newAttachment.data(""fileContent"", file);
                    newAttachment.find("".text"").text(file.name);
                    
                    attachmentList.append(newAttachment);
                }
                this.value = """";
                startUploadQueue();
            }); // file change






            function startUploadQueue() {
                if (attachmentList.find(""> li.inprogress:not(.d-none)"").length > 0) { return;}
       ");
            WriteLiteral(@"         var waitingAttachments = attachmentList.find(""> li.waiting:not(.d-none)"");
                if (waitingAttachments.length == 0) { return; }

                var firstWaitingAttachment = waitingAttachments.first();
                uploadFileToServer(firstWaitingAttachment);
            }// startUploadQueue





            function updateAttachment_FileIdsList_Input() {
                var result = """";
                attachmentList.find(""> li.completed:not(.d-none)"").each(function () {
                    var liAttach = $(this);
                    result += liAttach.attr('fileId') + "","";
                    
                });
                attachmentsIDsListInput.attr(""value"", result);

            }







            

            function uploadFileToServer(attachment) {

                var newInprogressAttachment = attachmentTemplate_inprogress.clone();
                newInprogressAttachment.data(""fileContent"", attachment.data(""fileContent""));
             ");
            WriteLiteral(@"   newInprogressAttachment.attr('id', attachment.attr(""id""));
                newInprogressAttachment.attr('fileId', attachment.attr(""fileId""));
                newInprogressAttachment.data('endByte', attachment.data(""endByte""));
                newInprogressAttachment.find("".text"").text(attachment.find("".text"").text());
                

                newInprogressAttachment.removeClass(""d-none"");
                attachment.replaceWith(newInprogressAttachment);

                var file = newInprogressAttachment.data(""fileContent"");
                if (newInprogressAttachment.attr(""fileId"") == """" ||
                    newInprogressAttachment.attr(""fileId"") == null ||
                    newInprogressAttachment.attr(""fileId"") == undefined) {
                    $.ajax({
                        url: """);
#nullable restore
#line 174 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                         Write(Model.GetUniqueUploadName);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" + \"?fileName=\" + file.name+\"&FormId=");
#nullable restore
#line 174 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                                                                                         Write(Model.FormId);

#line default
#line hidden
#nullable disable
            WriteLiteral("&Mac=");
#nullable restore
#line 174 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                                                                                                           Write(Model.Mac);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" ,
                        cache: false,
                        contentType: false,
                        processData: false,
                        method: 'Get',
                        type: 'Get', // For jQuery < 1.9
                        success: function (data) {
                            newInprogressAttachment.attr(""fileId"", data);
                            newInprogressAttachment.data(""endByte"", 0);
                            requestByteToEnd(file, file.size, newInprogressAttachment);
                        },
                        error: function (xhr, status, error) {
                            var newFailedAttachment = attachmentTemplate_failed.clone();
                            newFailedAttachment.data(""fileContent"", newInprogressAttachment.data(""fileContent""));
                            newFailedAttachment.attr('id', newInprogressAttachment.attr(""id""));
                            newFailedAttachment.data('endByte', newInprogressAttachment.data(""endByte""));
  ");
            WriteLiteral(@"                          newFailedAttachment.find("".text"").text(newInprogressAttachment.find("".text"").text());
                            
                            newFailedAttachment.removeClass(""d-none"");
                            newFailedAttachment.find(""> i.fa-redo-alt"").click(function () {
                                uploadFileToServer(newFailedAttachment);
                            });
                            newInprogressAttachment.replaceWith(newFailedAttachment);
                            startUploadQueue();
                        }
                    });
                }
                else
                    requestByteToEnd(file, file.size, newInprogressAttachment);;


                var step = 1;
                function requestByteToEnd(file, lastByte, attachment) {
                    
                    var byte = attachment.data(""endByte"");
                    if (!Number.isInteger(byte))
                        byte = 0;

                    v");
            WriteLiteral(@"ar endByte = byte + 500000;
                    if (endByte > lastByte)
                        endByte = lastByte;

                    var _blob = file.slice(byte, endByte);
                    var myFormData = new FormData();
                    myFormData.append('files', _blob); //myFormData.append('file-0', _blob);
                    
                    $.ajax({
                        url: """);
#nullable restore
#line 221 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                         Write(Model.UploadAction);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" + \"?fileName=\" + attachment.attr(\"fileId\") +\"&FormId=");
#nullable restore
#line 221 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                                                                                                   Write(Model.FormId);

#line default
#line hidden
#nullable disable
            WriteLiteral("&Mac=");
#nullable restore
#line 221 "D:\Projects\rrrrr\vulnerability management\Pentest_Report_Manager\Views\Shared\AttachmentLoader.cshtml"
                                                                                                                     Write(Model.Mac);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                        data: myFormData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        method: 'POST',
                        type: 'POST', // For jQuery < 1.9
                        success: function (data) {
                            attachment.data(""endByte"", endByte);
                            
                            //update progress
                            var prograss = ((100 * endByte) / lastByte).toFixed(0).toString();
                            attachment.find("".progress-bar"").css(""width"", prograss+'%');
                            
                            if (endByte < lastByte)
                                requestByteToEnd(file, lastByte, attachment);
                            else {
                                //change to complated
                                var newCompletedAttachment = attachmentTemplate_completed.clone();
              ");
            WriteLiteral(@"                  newCompletedAttachment.attr('id', attachment.attr(""id""));
                                newCompletedAttachment.attr('fileId', attachment.attr(""fileId""));
                                newCompletedAttachment.find("".text"").text(attachment.find("".text"").text());
                                newCompletedAttachment.removeClass(""d-none"");
                                attachment.replaceWith(newCompletedAttachment);

                                // add id to ids list 
                                updateAttachment_FileIdsList_Input();
                                
                                startUploadQueue();
                            }
                        },
                        error: function (xhr, status, error) {
                            // change to failded
                            var newFaildAttachment = attachmentTemplate_failed.clone();
                            newFaildAttachment.attr('id', attachment.attr(""id""));
                  ");
            WriteLiteral(@"          newFaildAttachment.attr('fileId', attachment.attr(""fileId""));
                            newFaildAttachment.data('endByte', attachment.data(""endByte""));
                            newFaildAttachment.data(""fileContent"", attachment.data(""fileContent""));
                            newFaildAttachment.find("".text"").text(attachment.find("".text"").text());
                            newFaildAttachment.find(""> i.fa-redo-alt"").click(function () {
                                uploadFileToServer(newFaildAttachment);
                            });
                            
                            newFaildAttachment.removeClass(""d-none"");
                            attachment.replaceWith(newFaildAttachment);

                            startUploadQueue();
                        }
                    });

                }//end of requestByteToEnd


            };

        };
    }); // document ready

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<AttachmentUploadObject> Html { get; private set; }
    }
}
#pragma warning restore 1591
