@model IEnumerable<ProjectSupport.Core.Models.Project>


<style>
    #navbarFixedTop {
        padding-top: 10px !important;
        padding-bottom: 0px !important;
        align-items: stretch;
    }

    #NavbarlinksContainer {
        min-width: 200px !important;
    }

    #Searchform_of_topNav {
        min-width: 400px;
        margin-left: -50px;
    }

        #Searchform_of_topNav > form {
            align-items: stretch;
            width: 100% !important;
            margin-left: auto;
        }

            #Searchform_of_topNav > form > i {
                margin-top: 14px;
            }

            #Searchform_of_topNav > form > ul {
                width: 90% !important;
                margin-right: 0px;
            }
    .remove-select-y-margins {
        margin-right: 0px;
        margin-left: auto;
        margin-top: 2px;
        margin-bottom: -12px;
        width: 140px;
        min-width:140px;
    }
    .remove-select-y-margins .caret{
        display: none;
    }
</style>

<nav id="navbarFixedTop" class="navbar navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav mx-n3 mb-1 site-theme-topNav-gradient">

    <!-- title -->
    <div class="d-inline-block pl-3 pr-5 text-left mt-1 mb-2 mt-2 pt-1 fa-lg">
        Projects
    </div>

    <!-- Navbar links-->
    <div id="NavbarlinksContainer" class="pl-3 pr-2 d-inline-block text-left mr-5 mr-auto mb-2">
        <a id="navbar-category-tutorial-jquery" class="btn btn-info btn-sm my-0 px-3" href="~/Projects/Create" role="button">
            <i class="fas fa-plus fa-lg"></i>
        </a>
    </div>



    <!-- pentest status-->
        <select id="pentest_type_select" class="remove-select-y-margins mdb-select md-form colorful-select dropdown-info">
            <option value="0">Pentest Status</option>
            <option value="not_pentested">Not Pentested</option>
            <option value="pentesting">Pentesting</option>
            <option value="vulnerable">Vulnerable</option>
            <option value="done">Pentest Done</option>
        </select>
        <script>
            $(document).ready(function () {
                $('#pentest_type_select').materialSelect();
            });
        </script>


    <div id="Searchform_of_topNav" class="d-inline-block col text-right pr-0 mb-2">

        <form class="form-inline text-right  col text-right px-0">
            <i class="fas fa-search mr-2 ml-auto" aria-hidden="true"></i>
            <input id="topNavSearch" class="form-control mr-0 col d-inline" type="text"
                   placeholder="Search"
                   aria-label="Search"
                   data-min-length='1'
                   multiple='multiple'
                   @*list='myDataList'*@ />
            <datalist id="myDataList">
                <option value="ali">ali</option>
                <option value="reza" capital="asdf">rezaaaa</option>
                <option value="mahdi">mahdi</option>
                <option value="sara">sara</option>
                <option value="nahid">nahid</option>
                <option value="naser">naser</option>
            </datalist>
        </form>


    </div>



</nav>




<script>
    
    $('#Searchform_of_topNav #topNavSearch').flexdatalist({
        minLength: 100,
        data: '/search/GetSearchKeywordsList',
        visibleProperties: [ "text"],
        groupBy: 'entity',
        searchIn: 'text',
        valueProperty: 'key',
        textProperty: '{entity}: {text}',
        selectionRequired: false,
        searchContain: true,
        allowDuplicateValues: false
    });

    var query = [];
    var pentestStatus = "0";
    $('#Searchform_of_topNav #topNavSearch').on('change:flexdatalist', function (event, set, options) {


        if(set == undefined)
            return;

        var key = set.value;
        var text;
        var isChanged = false;
        if (key != undefined) {
            // add to query
            text = set.text;
            query.push({ key, text});
            isChanged = true;
        }
        else {
            // remove from query
            set.forEach(function (item) {
                isChanged = true;
                key = item.value[0];
                text = item.text;
                var index = query.findIndex(function (o) {
                    return o.key === key && o.text=== text;
                })
                if (index !== -1)
                    query.splice(index, 1);
            });
        }

        if (isChanged)
            ajaxPullProjects();

    });

    var inProgresAjaxObject = undefined;
    function ajaxPullProjects() {

        if (inProgresAjaxObject && inProgresAjaxObject.readyState != 4) {
            inProgresAjaxObject.abort();
        }

        var normalizedQuery = query.map(function (keyword) {
            var key = '';
            var text = keyword.text;
            if (keyword.key.endsWith('&&&&&')) {
                key = keyword.key;
                var index = text.indexOf(":") + 2;
                text = text.substring(index, text.length);
            }
            return { key, text, entity: null };
        });
        var formData = {
            searchKeywords: normalizedQuery,     //JSON.stringify(...)
            pentestStatus: pentestStatus
        }

        console.log("started");

        inProgresAjaxObject = $.ajax({
            type: "POST",
            //contentType: "application/json; charset=utf-8",
            contentType: "application/json; charset=UTF-8",
            dataType: "html",
            //contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            url: "/search/queryProjects",
            //data: JSON.stringify({ formData: formData, query: "qqqq", pentestStatus: "stat" }),
            data: JSON.stringify(formData),
            //processData: false,
            success: function (response) {
                var projectsListDiv = $('.projectsList');
                console.log("recieved");
                console.log(response);
                projectsListDiv.html(response) 
            }
        });

    }


    $('#pentest_type_select').on('change', function () {

        var newSelecteOption = $('#pentest_type_select').val();

        if (pentestStatus != newSelecteOption) {
            pentestStatus = newSelecteOption;
            ajaxPullProjects();
        }

    });



</script>

