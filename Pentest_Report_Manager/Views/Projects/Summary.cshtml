@model ProjectSupport.Core.Models.Project


    <!-- Card -->
<div class="card mb-3 ">


    <!-- Button -->
    <a class="btn-floating btn-action ml-auto mr-4 mdb-color lighten-3 d-none" href="~/Projects/@Model.ID">
        <i class="fas fa-chevron-right pl-1"></i>
    </a>

    <!-- Card content -->
    <div class="card-body pl-4">

        <!-- Title -->
        <h5 class="card-title text-left text-truncate">@Html.DisplayFor(model => model.ProjectName)</h5>
        <hr>




        <div class="row text-left ">
            <strong class="d-inline ">@Html.DisplayNameFor(model => model.URL):&nbsp&nbsp</strong>
            <p class="card-text text-truncate font-italic">
                @Html.DisplayFor(model => model.URL)
            </p>
        </div>
        <div class="row text-left ">
            <strong class="d-inline ">@Html.DisplayNameFor(model => model.PolicyName):&nbsp&nbsp</strong>
            <p class="card-text text-truncate font-italic">
                @Html.DisplayFor(model => model.PolicyName)
            </p>
        </div>
        <div class="row text-left ">
            <strong class="d-inline ">@Html.DisplayNameFor(model => model.VirtualIP):&nbsp&nbsp</strong>
            <p class="card-text text-truncate font-italic">
                @Html.DisplayFor(model => model.VirtualIP)
            </p>
        </div>
        <div class="row text-left ">
            <strong class="d-inline ">@Html.DisplayNameFor(model => model.ServerPool):&nbsp&nbsp</strong>
            <p class="card-text text-truncate font-italic">
                @Html.DisplayFor(model => model.ServerPool)
            </p>
        </div>
    </div>


    <hr class="mt-1 mb-0">
    <!-- Text -->
    <p class="card-text text-justify @*text-truncate*@ text-center @Model.Description.GetTextLangDirection() ">
        @Html.Raw(Model.Description_Printable)
    </p>

    <!-- Card footer -->
    <div class="rounded-bottom blue-gradient  @*mdb-color lighten-3*@ text-center pt-2 pb-1">
        <ul class="list-unstyled list-inline font-small">
            <li class="list-inline-item pr-2 white-text float-left">
                &nbsp&nbsp
                <i class="fas fa-shield-alt"></i>
                H.12&nbsp   @*@Html.DisplayFor(model => 0 )*@
                M.12&nbsp
                L.12
            </li>
            <li class="list-inline-item pr-2 float-right">
                &nbsp
                <a href="~/Projects/@Model.ID/comments" class="white-text">
                    <i class="far fa-comments pr-1"></i>
                    @Model.Comments.Where(c => c.IsDeleted != true).Count()
                </a>
            </li>
            <li class="list-inline-item  float-right mr-1">
                <a href="~/Projects/@Model.ID/tasks" class="white-text" data-toggle="tooltip" title="Stopping Tasks">
                    <i class="fas fa-pause-circle"></i>
                    @Model.JobTasks.Where(j => j.IsDeleted == false && (j.Status == ProjectSupport.Core.Models.TaskStatus.problem || j.Status == ProjectSupport.Core.Models.TaskStatus.Halt || j.Status == ProjectSupport.Core.Models.TaskStatus.ReportSent)).Count()
                </a>
            </li>
            <li class="list-inline-item pr-2 float-right mr-1">
                <a href="~/Projects/@Model.ID/tasks" class="white-text" data-toggle="tooltip" title="Open Tasks">
                    <i class="fas fa-tasks"></i>
                    @Model.JobTasks.Where(j => j.IsDeleted == false && (j.Status == ProjectSupport.Core.Models.TaskStatus.Defined || j.Status == ProjectSupport.Core.Models.TaskStatus.Assigned || j.Status == ProjectSupport.Core.Models.TaskStatus.InProgress)).Count()
                </a>
            </li>
        </ul>
    </div>

</div>
    <!-- Card -->






