@model ProjectSupport.Core.Models.Project



<div class="card-body text-left pt-1 mt-3">
    <h5 class="mb-0 mt-3 mr-auto d-inline-block">Pentests</h5>
    <a href="~/Projects/@Model.ID/Tasks/create" class="btn btn-info btn-sm my-0 ml-4 px-3 d-inline-block waves-effect waves-light">
        <i class="fas fa-plus fa-lg"></i>
    </a>
</div>



<table class="table mt-n2 border ">

    <thead class=" blue-grey lighten-3">
        <tr>
            <th scope="col">Date</th>
            <td scope="col">Method</td>
            <td scope="col">Title</td>
            @*<td scope="col">Pentester</td>*@
            <td scope="col">Status/Complated</td>
        </tr>
    </thead>
    @if (Model.JobTasks.Count > 0)
    {
        <tbody>

            @{ 
                var taskList = Model.JobTasks.Reverse();
                foreach (var task in taskList)
                {
                    bool complated = false;
                    var lastResponse = task.TaskResponse_to_getVulnerabilitiesCount;
                    if (lastResponse != null && (lastResponse.IsDone ||
                        (task.TaskResponses.LastOrDefault()?.High_Vulnerabilities_Count == 0 &&
                        task.TaskResponses.LastOrDefault()?.Medium_Vulnerabilities_Count == 0 &&
                        task.TaskResponses.LastOrDefault()?.Low_Vulnerabilities_Count == 0)
                        ))
                    {
                        complated = true;
                    }

                <tr class="@(complated ? "grey lighten-5" : "")">
                    <th scope="row">
                        @(Model.Last_Modification_DateTime_in_PersianDate)
                    </th>
                    <td>
                        <!-- pentest type -->
                        @if (task.PentestType == PentestType.Black)
                        {
                            <span class="badge badge-pill badge-dark">Black</span>
                        }
                        else if (task.PentestType == PentestType.Gray)
                        {
                            <span class="badge badge-pill badge-default">Gray</span>
                        }
                        else if (task.PentestType == PentestType.White)
                        {
                            <span class="badge badge-pill badge-light">White</span>
                        }
                    </td>
                    <td  class="d-flex">
                        <a href="~/Projects/@Model.ID/Tasks/@task.ID" class="btn btn-link blue-text p-0" style="color:blue !important;">@task.Title</a>
                    </td>
                    <td class="d-flex">
                        <!-- pentesters -->
                        @foreach (var pentester in task.Pentesters)
                        {
                            <div class="chip">
                                <i class="fas fa-user mr-1"></i>
                                @Html.DisplayFor(model => pentester.Pentester.ApplicationUser.FullName)
                            </div>
                        }
                    </td>
                    <td>
                        @if (complated)
                        {
                            <i class="fas fa-check fa-md pr-2" aria-hidden="true"></i>
                        }
                        else if (lastResponse == null)
                        {
                            @("Pentesting")
                        }
                        else
                        {
                            <span class="red-text">H:</span>@(lastResponse.High_Vulnerabilities_Count)@:,&nbsp;
                            <span class="orange-ic">M:</span>@(lastResponse.Medium_Vulnerabilities_Count)@:,&nbsp;
                            <span class="blue-text">L:</span>@(lastResponse.Low_Vulnerabilities_Count)
                        }
                    </td>
                </tr>
                    }
                }
        </tbody>
    }
    else {<tr/> }
</table>
