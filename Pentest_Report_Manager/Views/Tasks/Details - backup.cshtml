@model ProjectSupport.Core.Models.JobTask

@{
    ViewData["Title"] = "Details";
}



@*@Model.Status
    @Model.Title
    @Model.Attachments
    @Model.Comments
    @Model.CreationDateTime
    @Model.DeadlineDays
    @Model.Description
    @Model.ExternalRequesterDetails
    @Model.Last_Modification_DateTime
    @Model.Pentesters
    @Model.PentestType
    @Model.PeriodNameForThirdParties
    @Model.Project
    @Model.Submitter_Pentester
    @Model.TaskResponses*@





<style>

    @@media screen and (max-width: 800px) {
        #navigationTitle {
            position: relative !important;
            z-index: 3 !important;
            margin-left: 1rem !important;
            padding: 15px !important;
            font-size: 18px !important;
            display: inline-block !important;
            padding-right: 3rem !important;
        }



        #tabNavInfoComment {
            padding-top: 45px !important;
            background-color: blue;
            margin-top: -63px !important;
        }

            #tabNavInfoComment > #navigationTitleInside {
                display: none !important;
            }
    }



    #tabNavInfoComment {
        background-color: #EFF0F2 !important;
    }

        #tabNavInfoComment > #navigationTitleInside {
            font-size: 18px !important;
            margin-top: 5px;
            min-width: 30% !important;
            max-width: 60%;
        }

        #tabNavInfoComment > li > a {
            color: black !important;
            font-size: 14px;
        }


    #panel1 div[class|="paragraph-with-Definition"] {
        margin-top: 10px;
    }
</style>



<!-- Nav tabs -->
<h5 id="navigationTitle" class="text-left w-100 d-none text-truncate ">
    @Html.DisplayFor(model => model.Title)
</h5>
<ul id="tabNavInfoComment" class="nav nav-tabs md-tabs nav-justified @*primary-color*@ site-theme-topNav-gradient " role="tablist">

    <li id="navigationTitleInside" class="d-inline-block text-left mr-5 text-truncate">
        @Html.DisplayFor(model => model.Title)
    </li>

    <li class="nav-item">
        <a class="nav-link active" data-toggle="tab" href="#Details" role="tab">
            <i class="fas fa-info-circle pr-2"></i>Details
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#Vulnerabilities" role="tab">
            <i class="fas fa-shield-alt pr-2"></i>Vulnerabilities
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#Responses" role="tab">
            <i class="fas fa-reply pr-2"></i>Responses
        </a>
    </li>
    <li class="nav-item" id="ddddd">
        <a class="nav-link" data-toggle="tab" href="#comments" role="tab">
            <i class="far fa-comments pr-2"></i>Comments
        </a>
    </li>
</ul>
<!-- Nav tabs -->
<!-- Tab panels -->
<div class="tab-content card">

    <!-- Panel Info -->
    <div class="tab-pane fade in show active" id="Details" role="tabpanel">



        <hr class="mt-1 mb-0">
        <p class="pt-2 card-text text-justify @*text-truncate*@ text-center @Model.Description.GetTextLangDirection() ">
            @Html.Raw(Model.Description_Printable)
        </p>


        @Html.Partial("_MultiColumn_for_General_2Columns-Start", "DetailsFields")



        <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
            <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                @Html.DisplayNameFor(model => model.Status)
            </strong>
            @Html.DisplayFor(model => model.Status)
        </div>
        <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
            <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                @Html.DisplayNameFor(model => model.PentestType)
            </strong>
            @Html.DisplayFor(model => model.PentestType)
        </div>
        <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
            <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                @Html.DisplayNameFor(model => model.CreationDateTime)
            </strong>
            @Html.DisplayFor(model => model.CreationDateTime)
        </div>
        @{
            if (Model.DeadlineDays > 0)
            {
                DateTime dt = (DateTime)Model.CreationDateTime;
                var remainingDays = (dt.AddDays(Model.DeadlineDays) - DateTime.Now);
                if (remainingDays.TotalSeconds > 0)
                {
                    <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
                        <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                            @Html.DisplayNameFor(model => model.DeadlineDays)
                        </strong>
                        @(remainingDays.Days + 1)
                    </div>
                }
                else
                {
                    <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
                        <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                            @Html.DisplayNameFor(model => model.DeadlineDays)
                        </strong>
                        @System.Math.Abs(remainingDays.Days)
                        <span class="ml-2 badge red">Espired!</span>

                    </div>
                }

            }

        }

        <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
            <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                @Html.DisplayNameFor(model => model.ExternalRequesterDetails)
            </strong>
            @Html.DisplayFor(model => model.ExternalRequesterDetails)
        </div>

        @{
            bool isExternal = false;
            foreach (var pent in Model.Pentesters)
            {
                if (pent.Pentester.ThirdParty)
                {
                    isExternal = true;
                    break;
                }
            }

            if (isExternal || !string.IsNullOrEmpty(Model.PeriodNameForThirdParties))
            {
                <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
                    <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                        @Html.DisplayNameFor(model => model.PeriodNameForThirdParties)
                    </strong>
                    @Html.DisplayFor(model => model.PeriodNameForThirdParties)
                </div>
            }
        }


        <div class='paragraph-with-Definition-p80-JumpToLeft justify-wrap-break'>
            <strong class='ParagraphTitle font-weight-bold mr-3 d-inline-block text-right'>
                Project Name
            </strong>
            <a class="card-text text-truncate font-italic max-height-65" href="~/projects/details/@Model.Project.ID">
                @Html.DisplayFor(model => model.Project.ProjectName)
            </a>
        </div>

        @Html.Partial("_MultiColumn_for_General_2Columns-End", "DetailsFields")




        <div class="row text-left paragraph-with-Definition-p80-JumpToLeft p-3 mx-0">
            <strong class="ParagraphTitle font-weight-bold mr-3 d-inline-block text-right">Pentesters:&nbsp&nbsp</strong>
            @foreach (var pentester in Model.Pentesters)
            {
                <div class="chip">
                    @*<img src="https://mdbootstrap.com/img/Photos/Avatars/avatar-6.jpg" alt="Contact Person">*@
                    <i class="fas fa-user mr-1"></i>
                    @Html.DisplayFor(model => pentester.Pentester.ApplicationUser.FullName)
                </div>
            }

        </div>


        <hr class="mt-2 mb-1">


        @{
            var urls = new AttachmentUploadObject
            {
                DownloadAction = @"/Attachment/Download/?filename=",
                Attachments = Model.Attachments
            };
        }
        <partial name="AttachmentLoader_ReadOnly" for="@urls" />




        <div class="form-group col-12 mt-4 mb-0 ">
            <a href="~/Tasks/Edit/@Model.ID" class="btn btn-outline-primary btn-rounded waves-effect btn-md">Edit</a>
            <a href="~/Tasks/index" class="btn btn-outline-default btn-rounded waves-effect btn-md">Back to list</a>
            <a href="~/Tasks/Delete/@Model.ID" class="btn btn-outline-danger btn-rounded btn-md waves-effect float-right">
                Delete
                <i class="fas fa-trash-alt ml-1"></i>
            </a>
        </div>



    </div>
    <!-- Panel Info -->
    <!-- Panel Vulnerabilities -->
    <div class="tab-pane fade" id="Vulnerabilities" role="tabpanel">
        vulnerabilities
    </div>
    <!-- Panel Vulnerabilities -->
    <!-- Panel Responses -->
    <div class="tab-pane fade" id="Responses" role="tabpanel">
        responses

    </div>
    <!-- Panel Responses -->
    <!-- Panel Comments -->
    <div class="tab-pane fade" id="comments" role="tabpanel">
        fasdf


    </div>
    <!-- Panel Comments -->

</div>
<!-- Tab panels -->


<script>


    $(document).ready(function () {
        $('#tabNavInfoComment >li >a').click(function () {
            window.setTimeout(function () {
                triggerResizeEvent();
            }, 700);
        });
        $('#tasks > div.row ul a').click(function () {
            window.setTimeout(function () {
                triggerResizeEvent();
            }, 700);
        });

        var hash = window.location.hash;
        if (hash=="#details")
            //$('#tabNavInfoComment > li a[href="#details"]').tab('show');
            $('#tabNavInfoComment > li a[href="#details"]').click();
        else if (hash == "#tasks")
            //$('#tabNavInfoComment > li a[href="#tasks"]').tab('show');
            $('#tabNavInfoComment > li a[href="#tasks"]').click();
        else if (hash == "#comments")
            //$('#tabNavInfoComment > li a[href="#comments"]').tab('show');
            $('#tabNavInfoComment > li a[href="#comments"]').click();

    });

</script>

