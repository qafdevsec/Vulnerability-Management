using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Razor;
using Microsoft.AspNetCore.Routing;
using ProjectSupport.Core;
using ProjectSupport.Core.Models;
using ProjectSupport.Infrastructure;
//using Westwind.Web.Mvc;


namespace Pentest_Report_Manager.Controllers
{
    public class testController : Controller
    {
        ProjectSupportDB db;
        public testController(ProjectSupportDB _db) {
            db = _db;
        }
        public string temp() {


            //ProjectSummary projectSummary= new ProjectSummary()
            //{
            //    ProjectName = "projS1",
            //    Description = "proj1 Desc",
            //    Detail = new ProjectDetail() {
            //        AdomName="adom1"
            //    }
            //};
            //projectSummary.Detail.JobTasksSummaries = new List<JobTaskSammary>() {
            //        new JobTaskSammary(){
            //            Title = "title sdof aosdf",
            //            Description = "this is job description1",
            //            Status=Core.Models.TaskStatus.Closed,
            //            Detail = new JobTaskDetail() {
            //                PentestType = PentestType.Black
            //            },
            //        }
            //};
            //projectSummary.Detail.JobTasksSummaries.FirstOrDefault().Detail.SubSummaries =
            //    new List<JobTaskSammary>() {
            //        new JobTaskSammary()
            //        {
            //            ProjectDetail = projectSummary.Detail,
            //            Title = "jobtask2",
            //            Description = "tkjhiption1 #taskDesc2",
            //            Status = Core.Models.TaskStatus.Defined,
            //            Detail = new JobTaskDetail()
            //            {
            //                PentestType = PentestType.White
            //            },
            //        }
            //    };

            ////projectSummary.Detail.Comments= new List<BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectDetail, Microsoft.AspNetCore.Identity.IdentityUser>>() {
            ////    new BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectDetail, Microsoft.AspNetCore.Identity.IdentityUser>()
            ////    {
            ////        Text = "comment1 #comm1"
            ////    },
            ////    new BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectDetail, Microsoft.AspNetCore.Identity.IdentityUser>()
            ////    {
            ////        Text = "comment2 #comm2 #comm22"
            ////    }
            ////};
            ////projectSummary.Detail.JobTasksSummary.FirstOrDefault().Detail.Comments.Add(
            ////    new BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<JobTaskDetail, Microsoft.AspNetCore.Identity.IdentityUser>()
            ////    {
            ////        Text = "commentjob1 #commJob1"
            ////    });

            //projectSummary.Detail.Attachments.Add(new BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectDetail>()
            //{
            //    FileName="file1"
            //});



            //projectSummary.Attachments.Add(new BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSummary> { FileName = "attachment1.pdf" });
            //projectSummary.Detail.Attachments.Add(
            //    new BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectDetail>
            //    { FileName = "attachment2222.docx" }
            //    );




            //projectSummary.RefereshTagList();
            //projectSummary.Detail.RefereshTagList();
            //foreach (var task in projectSummary.Detail.JobTasksSummaries)
            //{
            //    task.RefereshTagList();
            //    task.Detail.RefereshTagList();
            //}
            


            //db.Add(projectSummary);
            //db.SaveChanges();

            return "done";
        }



        public IActionResult Index()
        {
            return View();
        }

        public async Task<string> test() {

            return "asdf";
        }


    }



    public class blockWrapper
    {

        string viewAddres;
        public blockWrapper(string _viewAddress )
        {
            this.viewAddres = _viewAddress;
        }

        public string title { get; set; }
        public string description { get; set; }

        //public override string ToString()
        //{
        //    //string result = ViewRenderer.RenderPartialView(viewAddres, this, controllerContext: ccc);
            

        //    return result;
        //}



    }




    public class myObject
    {
        public int id { get; set; }
        public string name { get; set; }
    }








}