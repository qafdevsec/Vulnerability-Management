using BlogPortal.Core.BussinessTemplatesModel.BlogPost;
using Microsoft.AspNetCore.Identity;
using Pentest_Report_Manager.Classes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Security.Claims;
using System.Text;
using System.Threading.Tasks;

namespace ProjectSupport.Core.Models
{
    public class ApplicationUser : IdentityUser<int>
    {
        public ApplicationUser() : base()
        {

        }



        [InverseProperty(nameof(Tag<ApplicationUser>.ParrentObject))]
        public virtual ICollection<Tag<ApplicationUser>> Tags { get; set; } = new List<Tag<ApplicationUser>>();

        /// <summary>
        /// rememper to load releted entity "Tags", bewfor calling this function
        /// </summary>
        public void RefereshTagList()
        {
            if (Tags == null) Tags = new List<Tag<ApplicationUser>>();
            Tags.Clear();

            var taggableProps = TaggableAttribute.Get_Taggable_Properties(this);
            foreach (var prop_attr in taggableProps)
            {
                if (prop_attr.TaggableAttribute.IsSharpable == false)
                {
                    var newTag = (Tag<ApplicationUser>)Activator.CreateInstance(typeof(Tag<ApplicationUser>), prop_attr.PropertyStringValue);
                    Tags.Add(newTag);
                }
                else
                {
                    var sharpedStrings = TaggableAttribute.ExtractSharpStrings(prop_attr.PropertyStringValue);
                    foreach (var item in sharpedStrings)
                    {
                        var newTag = (Tag<ApplicationUser>)Activator.CreateInstance(typeof(Tag<ApplicationUser>), item);
                        Tags.Add(newTag);
                    }
                }
            }

        }






        [StringLength(500, ErrorMessage = "طول فیلد نام کامل نمی‌تواند بیشتر از 500 کاراکتر باشد.")]
        //[Display(Name = "نام کامل")]
        [Display(Name = "Full Name")]
        [Required]
        [Taggable]
        public string FullName { get; set; }



        [StringLength(10000, ErrorMessage = "طول فیلد توضیحات نمی‌تواند بیشتر از 10000 کاراکتر باشد.")]
        //[Display(Name = "توضیحات")]
        [Taggable(IsSharpable = true)]
        public string Description { get; set; }

        [NotMapped]
        public string Description_Printable { get { return Description == null ? null : Description.ReplaceLineBreaks(); } }



        [StringLength(10000, ErrorMessage = "طول فیلد آدرس عکس نمی‌تواند بیشتر از 10000 کاراکتر باشد.")]
        //[Display(Name = "آدرس عکس")]
        [Display(Name = "Picture's Url")]
        public string PictureUrl { get; set; }



        public bool IsDeleted { get; set; } = false;


        public virtual ICollection<ApplicationUserRole> UserRoles { get; set; }



        [InverseProperty(nameof(Models.Pentester.ApplicationUser))]
        public Pentester Pentester { get; set; }





        [InverseProperty(nameof(TaskResponse.Submitter_ApplicationUser))]
        public virtual ICollection<TaskResponse> TaskResponses { get; set; }
            = new List<TaskResponse>();



    }


}
