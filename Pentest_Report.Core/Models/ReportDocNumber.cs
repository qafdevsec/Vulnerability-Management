using BlogPortal.Core.BussinessTemplatesModel.BlogPost;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;


namespace ProjectSupport.Core.Models
{
    public class ReportFileAndPDF
    {
        private string _document_number;
        public ReportFileAndPDF()
        {

        }
        public ReportFileAndPDF(string documentNubmer) {
            _document_number = documentNubmer;

        }

        #region Propperties

        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int ID { get; set; }


        [DataType("datetime2")]
        [Display(Name = "تاریخ ایجاد")]
        public DateTime? Creation { get; set; } = DateTime.Now;



        //[StringLength(20)]
        //public string ReportNumber { get; set; }    //year = "05-"+ DbUtilities.DateTimeUtilities.getPersianCollender_Now().Year.ToString("yy") +"-" +(currentYearLastReservedReportNumber++)



        //public bool isFree { get; set; } = false;



        //public bool isFinalized { get; set; } = false; // does corresponding TasskReport is inserted?



        public bool IsDeleted { get; set; } = false;   // if taskReport is Deleted


        #endregion


        #region Links


        //[InverseProperty(nameof(Attachment<ReportDocNumberAndFile>.ParrentObject))]
        //public virtual Attachment<ReportDocNumberAndFile> DocFile { get; set; } = new Attachment<ReportDocNumberAndFile>("");

        //public void setDocumentNumber(string documentNumber)
        //{
        //    DocFile = new Attachment_with_two_Relations<ReportDocAndFile>(documentNumber);
        //    PdfFile= new Attachment_with_two_Relations<ReportDocAndFile>(documentNumber);
        //}

        [InverseProperty(nameof(Attachment_with_two_Relations<ReportFileAndPDF>.ParrentObject_Filed1))]
        public virtual Attachment_with_two_Relations<ReportFileAndPDF> DocFile { get; set; } 



        [InverseProperty(nameof(Attachment_with_two_Relations<ReportFileAndPDF>.ParrentObject_Filed2))]
        public virtual Attachment_with_two_Relations<ReportFileAndPDF> PdfFile { get; set; } 




        [ForeignKey(nameof(TaskResponse))]
        public int? TaskResponse_Ref { get; set; }
        public virtual TaskResponse TaskResponse { get; set; }

        #endregion


        public override string ToString()
        {
            string docName = DocFile?.ToString();
            string pdfName = PdfFile?.ToString() ?? "";
            return docName != null ? docName : pdfName;
        }
    }













}















