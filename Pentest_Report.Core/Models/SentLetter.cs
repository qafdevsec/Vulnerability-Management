using BlogPortal.Core.BussinessTemplatesModel.BlogPost;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Pentest_Report_Manager.Classes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Text.RegularExpressions;

namespace ProjectSupport.Core.Models
{
    public class SentLetter
        : EntitySingle<
                Attachment<SentLetter>,
                Tag<SentLetter>
                >
    {

        #region Properties


        [Taggable]
        [StringLength(50, ErrorMessage = "طول فیلد شماره نامه نمی‌تواند بیشتر از 50 کاراکتر باشد.")]
        [Display(Name = "Letter Name")]
        //[Display(Name = "شماره نامه")]
        public string LetterNumber { get; set; }




        [DataType("datetime2")]
        //[Display(Name = "تاریخ ارسال")]
        [Display(Name = "Sent Date")]
        public DateTime? SentDate { get; set; } = DateTime.Now;




        [Taggable]
        [StringLength(300, ErrorMessage = "طول فیلد ارسال کننده نمی‌تواند بیشتر از 300 کاراکتر باشد.")]
        //[Display(Name = "ارسال کننده")]
        [Display(Name = "Sender")]
        public string SenderName { get; set; }




        [Taggable]
        [StringLength(300, ErrorMessage = "طول فیلد دریافت کننده نمی‌تواند بیشتر از 300 کاراکتر باشد.")]
        //[Display(Name = "دریافت کننده")]
        [Display(Name = "Reciever")]
        public string ReceiverName { get; set; }




        [Taggable(IsSharpable = true)]
        [StringLength(10000, ErrorMessage = "طول فیلد توضیحات نمی‌تواند بیشتر از 10000 کاراکتر باشد.")]
        //[Display(Name = "توضیحات")]
        public string Description { get; set; }

        [NotMapped]
        public string Description_Printable { get { return Description == null ? null : Description.ReplaceLineBreaks(); } }



        #endregion


        #region Links


        [ForeignKey(nameof(JobTask))]
        public int? JobTask_Ref { get; set; }
        public virtual JobTask JobTask { get; set; }


        #endregion


    }





























}
