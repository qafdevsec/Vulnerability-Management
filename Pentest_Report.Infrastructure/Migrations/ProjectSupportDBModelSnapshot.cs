// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSupport.Infrastructure;

namespace Pentest_Report.Infrastructure.Migrations
{
    [DbContext(typeof(ProjectSupportDB))]
    partial class ProjectSupportDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.JobTask>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Ref");

                    b.ToTable("Attachment_JobTask");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.Pentester>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Ref");

                    b.ToTable("Attachment_Pentester");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.Project>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Ref");

                    b.ToTable("Attachment_Project");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.ReportFileAndPDF>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Ref");

                    b.ToTable("Attachment_ReportDocNumberAndFile");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.SentLetter>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Ref");

                    b.ToTable("Attachment_SentLetter");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.TaskResponse>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Ref");

                    b.ToTable("Attachment_TaskResponse");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment_with_two_Relations<ProjectSupport.Core.Models.ReportFileAndPDF>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FilePhysicalName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FilePhysicalPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FileVirtualName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileWebRootFullPath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParrentObject_Filed1_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("ParrentObject_Filed2_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentObject_Filed1_Ref")
                        .IsUnique()
                        .HasFilter("[ParrentObject_Filed1_Ref] IS NOT NULL");

                    b.HasIndex("ParrentObject_Filed2_Ref")
                        .IsUnique()
                        .HasFilter("[ParrentObject_Filed2_Ref] IS NOT NULL");

                    b.ToTable("Attachment_with_two_Relations<ReportFileAndPDF>");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.JobTask, ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("RepliedComment_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("SubmitterUserId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ViewFilePath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.HasIndex("RepliedComment_Ref");

                    b.HasIndex("SubmitterUserId");

                    b.ToTable("Comment_JobTask");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.Project, ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("RepliedComment_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("SubmitterUserId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ViewFilePath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.HasIndex("RepliedComment_Ref");

                    b.HasIndex("SubmitterUserId");

                    b.ToTable("Comment_Project");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.TaskResponse, ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("RepliedComment_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("SubmitterUserId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ViewFilePath")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.HasIndex("RepliedComment_Ref");

                    b.HasIndex("SubmitterUserId");

                    b.ToTable("Comment_TaskResponse");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.MyString<ProjectSupport.Core.Models.TaskResponse>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("VulnerablitiesTitles_for_TaskResponse");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("Tag_ApplicationUser");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.JobTask>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("Tag_JobTask");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.Pentester>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("Tag_Pentester");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.Project>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("Tag_Project");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.SentLetter>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("Tag_SentLetter");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.TaskResponse>", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParrentEntityObject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("ParrentEntityObject_Ref");

                    b.ToTable("Tag_TaskResponse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ConfigurationFields", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ConfigurationFields");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ErrorLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgrammerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SaveOnDb")
                        .HasColumnType("bit");

                    b.Property<string>("VisualStudioErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.JobTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationDateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeadlineDays")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<string>("Description_Printable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalRequesterDetails")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LastReportVersion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Modification_DateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PentestType")
                        .HasColumnType("int");

                    b.Property<string>("PeriodNameForThirdParties")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("Project_Ref")
                        .HasColumnType("int");

                    b.Property<string>("ReportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Submitter_Pentester_Ref")
                        .HasColumnType("int");

                    b.Property<int?>("TaskResponse_to_getVulnerabilitiesCount_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<string>("ViewFilePath_as_Detail")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_ListItem")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("Project_Ref");

                    b.HasIndex("Submitter_Pentester_Ref");

                    b.HasIndex("TaskResponse_to_getVulnerabilitiesCount_Ref")
                        .IsUnique()
                        .HasFilter("[TaskResponse_to_getVulnerabilitiesCount_Ref] IS NOT NULL");

                    b.ToTable("JobTasks");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.JobTask_Pentester", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobTaskSammary_Ref")
                        .HasColumnType("int");

                    b.Property<int>("Pentester_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("JobTaskSammary_Ref");

                    b.HasIndex("Pentester_Ref");

                    b.ToTable("JobTask_Pentesters");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.Pentester", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationUser_Ref")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationDateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Modification_DateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThemColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ThirdParty")
                        .HasColumnType("bit");

                    b.Property<string>("ViewFilePath_as_Detail")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_ListItem")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("ApplicationUser_Ref")
                        .IsUnique()
                        .HasFilter("[ApplicationUser_Ref] IS NOT NULL");

                    b.ToTable("Pentesters");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdomName")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationDateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<string>("Description_Printable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Modification_DateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Modifier_Pentester_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ParrentProject_Ref")
                        .HasColumnType("int");

                    b.Property<string>("PolicyName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<byte>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ServerPool")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Submitter_Pentester_Ref")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ViewFilePath_as_Detail")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_ListItem")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("VirtualIP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("Modifier_Pentester_Ref");

                    b.HasIndex("ParrentProject_Ref");

                    b.HasIndex("Submitter_Pentester_Ref");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ReportFileAndPDF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("TaskResponse_Ref")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TaskResponse_Ref")
                        .IsUnique()
                        .HasFilter("[TaskResponse_Ref] IS NOT NULL");

                    b.ToTable("ReportDocNumberAndFiles");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.SentLetter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationDateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobTask_Ref")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Modification_DateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LetterNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewFilePath_as_Detail")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_ListItem")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("JobTask_Ref");

                    b.ToTable("SentLetters");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.TaskResponse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationDateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(10000);

                    b.Property<byte>("High_Vulnerabilities_Count")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int?>("JobTask_Ref")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Last_Modification_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Modification_DateTime_in_PersianDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Low_Vulnerabilities_Count")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Medium_Vulnerabilities_Count")
                        .HasColumnType("tinyint");

                    b.Property<int>("ReportVersion")
                        .HasColumnType("int");

                    b.Property<int?>("Submitter_ApplicationUser_Ref")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ViewFilePath_as_Detail")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_ListItem")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ViewFilePath_as_Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("JobTask_Ref");

                    b.HasIndex("Submitter_ApplicationUser_Ref");

                    b.ToTable("TaskResponses");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.JobTask>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.JobTask", "ParrentObject")
                        .WithMany("Attachments")
                        .HasForeignKey("ParrentObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.Pentester>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Pentester", "ParrentObject")
                        .WithMany()
                        .HasForeignKey("ParrentObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.Project>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Project", "ParrentObject")
                        .WithMany("Attachments")
                        .HasForeignKey("ParrentObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.ReportFileAndPDF>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ReportFileAndPDF", "ParrentObject")
                        .WithMany()
                        .HasForeignKey("ParrentObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.SentLetter>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.SentLetter", "ParrentObject")
                        .WithMany("Attachments")
                        .HasForeignKey("ParrentObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment<ProjectSupport.Core.Models.TaskResponse>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.TaskResponse", "ParrentObject")
                        .WithMany("Attachments")
                        .HasForeignKey("ParrentObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment_with_two_Relations<ProjectSupport.Core.Models.ReportFileAndPDF>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ReportFileAndPDF", "ParrentObject_Filed1")
                        .WithOne("DocFile")
                        .HasForeignKey("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment_with_two_Relations<ProjectSupport.Core.Models.ReportFileAndPDF>", "ParrentObject_Filed1_Ref");

                    b.HasOne("ProjectSupport.Core.Models.ReportFileAndPDF", "ParrentObject_Filed2")
                        .WithOne("PdfFile")
                        .HasForeignKey("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Attachment_with_two_Relations<ProjectSupport.Core.Models.ReportFileAndPDF>", "ParrentObject_Filed2_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.JobTask, ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.JobTask", "ParrentObject")
                        .WithMany("Comments")
                        .HasForeignKey("ParrentEntityObject_Ref");

                    b.HasOne("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.JobTask, ProjectSupport.Core.Models.ApplicationUser>", "RepliedComment")
                        .WithMany("Replies")
                        .HasForeignKey("RepliedComment_Ref");

                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "SubmitterUser")
                        .WithMany()
                        .HasForeignKey("SubmitterUserId");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.Project, ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Project", "ParrentObject")
                        .WithMany("Comments")
                        .HasForeignKey("ParrentEntityObject_Ref");

                    b.HasOne("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.Project, ProjectSupport.Core.Models.ApplicationUser>", "RepliedComment")
                        .WithMany("Replies")
                        .HasForeignKey("RepliedComment_Ref");

                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "SubmitterUser")
                        .WithMany()
                        .HasForeignKey("SubmitterUserId");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.TaskResponse, ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.TaskResponse", "ParrentObject")
                        .WithMany("Tags")
                        .HasForeignKey("ParrentEntityObject_Ref");

                    b.HasOne("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Comment<ProjectSupport.Core.Models.TaskResponse, ProjectSupport.Core.Models.ApplicationUser>", "RepliedComment")
                        .WithMany("Replies")
                        .HasForeignKey("RepliedComment_Ref");

                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "SubmitterUser")
                        .WithMany()
                        .HasForeignKey("SubmitterUserId");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.MyString<ProjectSupport.Core.Models.TaskResponse>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.TaskResponse", "ParrentObject")
                        .WithMany("Vulnerablities_Titles")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.ApplicationUser>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "ParrentObject")
                        .WithMany("Tags")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.JobTask>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.JobTask", "ParrentObject")
                        .WithMany("Tags")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.Pentester>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Pentester", "ParrentObject")
                        .WithMany("Tags")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.Project>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Project", "ParrentObject")
                        .WithMany("Tags")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.SentLetter>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.SentLetter", "ParrentObject")
                        .WithMany("Tags")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("BlogPortal.Core.BussinessTemplatesModel.BlogPost.Tag<ProjectSupport.Core.Models.TaskResponse>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.TaskResponse", "ParrentObject")
                        .WithMany("Comments")
                        .HasForeignKey("ParrentEntityObject_Ref");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.JobTask", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Project", "Project")
                        .WithMany("JobTasks")
                        .HasForeignKey("Project_Ref")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSupport.Core.Models.Pentester", "Submitter_Pentester")
                        .WithMany("DefinedJobTasks")
                        .HasForeignKey("Submitter_Pentester_Ref");

                    b.HasOne("ProjectSupport.Core.Models.TaskResponse", "TaskResponse_to_getVulnerabilitiesCount")
                        .WithOne("JobTask_to_getVulnerabilitiesCount")
                        .HasForeignKey("ProjectSupport.Core.Models.JobTask", "TaskResponse_to_getVulnerabilitiesCount_Ref");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.JobTask_Pentester", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.JobTask", "JobTask")
                        .WithMany("Pentesters")
                        .HasForeignKey("JobTaskSammary_Ref")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSupport.Core.Models.Pentester", "Pentester")
                        .WithMany("AssignedJobTasks_as_Pentester")
                        .HasForeignKey("Pentester_Ref")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.Pentester", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Pentester")
                        .HasForeignKey("ProjectSupport.Core.Models.Pentester", "ApplicationUser_Ref");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.Project", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.Pentester", "Modifier_Pentester")
                        .WithMany("ModifiedProjects")
                        .HasForeignKey("Modifier_Pentester_Ref");

                    b.HasOne("ProjectSupport.Core.Models.Project", "ParrentProject")
                        .WithMany("SubProjects")
                        .HasForeignKey("ParrentProject_Ref");

                    b.HasOne("ProjectSupport.Core.Models.Pentester", "Submitter_Pentester")
                        .WithMany("DefinedProjects")
                        .HasForeignKey("Submitter_Pentester_Ref");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.ReportFileAndPDF", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.TaskResponse", "TaskResponse")
                        .WithOne("ReportFileAndPDF")
                        .HasForeignKey("ProjectSupport.Core.Models.ReportFileAndPDF", "TaskResponse_Ref");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.SentLetter", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.JobTask", "JobTask")
                        .WithMany("SentLetters")
                        .HasForeignKey("JobTask_Ref");
                });

            modelBuilder.Entity("ProjectSupport.Core.Models.TaskResponse", b =>
                {
                    b.HasOne("ProjectSupport.Core.Models.JobTask", "JobTask")
                        .WithMany("TaskResponses")
                        .HasForeignKey("JobTask_Ref");

                    b.HasOne("ProjectSupport.Core.Models.ApplicationUser", "Submitter_ApplicationUser")
                        .WithMany("TaskResponses")
                        .HasForeignKey("Submitter_ApplicationUser_Ref");
                });
#pragma warning restore 612, 618
        }
    }
}
