using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;

namespace BlogPortal.Core.BussinessTemplatesModel.BlogPost
{


    public class MyString_with_two_Relations<ParrentEntityType>: MyString<ParrentEntityType>
    {
        public MyString_with_two_Relations() { }

        public MyString_with_two_Relations(string text): base(text) {}




        [ForeignKey(nameof(ParrentObject_Filed1))]
        public int? ParrentObject_Filed1_Ref { get; set; }
        public virtual ParrentEntityType ParrentObject_Filed1 { get; set; }


        [ForeignKey(nameof(ParrentObject_Filed2))]
        public int? ParrentObject_Filed2_Ref { get; set; }
        public virtual ParrentEntityType ParrentObject_Filed2 { get; set; }

    }




    public class MyString<ParrentEntityType> : MyString
    {
        public MyString(){}
        public MyString(string text) : base(text) {}
        public MyString(string text, string label) : base(text, label) { }


        [ForeignKey(nameof(ParrentObject))]
        public int? ParrentEntityObject_Ref { get; set; }
        public virtual ParrentEntityType ParrentObject { get; set; }


    }



    public class MyString
    {
        public MyString() { }

        public MyString(string text)
        {
            Text = text;
        }
        public MyString(string text, string label)
        {
            Text = text;
            Label = label;
        }



        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public virtual int ID { get; set; }




        [StringLength(maximumLength: 10000, ErrorMessage = "طول رشته نباید از 10000 حرف بیشتر باشد")]
        //[Display(Name = "متن")]
        public string Text { get; set; }



        [StringLength(maximumLength: 1000, ErrorMessage = "طول رشته نباید از 1000 حرف بیشتر باشد")]
        public string Label { get; set; }


    }


}